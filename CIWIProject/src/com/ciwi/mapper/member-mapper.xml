<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ciwi.mapper.member-mapper">
	<!-- login -->
	<!-- 1. 아이디 존재여부 확인 -->
	<select id="memberIdCount" resultType="int" parameterType="String">
	select count(*) from member
	where id=#{id}
	</select>
	<!-- 2. 비밀번호 확인 -->
	<select id="memberGetPwd" resultType="MemberVO" parameterType="String">
		Select pwd,name,admin
		From member
		Where id=#{id}
	</select>
	<!-- 아이디 중복검색 -->
	<select id="memberIdOverlap" resultType="int" parameterType="String">
	select count(*) from member
	where id=#{id}
	</select> 
	<!-- 아이디찾기 -->
	<select id="memberIdsearch" resultType="MemberVO" parameterType="String">
		select id,name from member
		where phone=#{phone}
	</select>
	<!-- 비밀번호 찾기 -->
	<select id="memberPwdsearch" resultType="MemberVO" parameterType="String">
	select id,pwd from member
	where id=#{id} 
	</select>
	<!-- 휴대폰번호 중복검색 -->
	<select id="joinPhone" resultType="int" parameterType="String" >
		select count(*) from member
		where phone=#{phone}
	</select>
	<!-- 회원가입 데이터 db에 넣기 -->
	<insert id="memberInsertData" parameterType="MemberVO">
	<selectKey keyProperty="join_no" resultType="int" order="BEFORE">
			select NVL(max(join_no)+1,1) as join_no from member
		</selectKey>
		INSERT INTO member VALUES(
			#{join_no},
			#{id},
			#{pwd},
			#{name},
			#{sex},
			#{birthday},
			#{email},
			#{phone},
			#{post},
			#{main_addr},
			#{sub_addr},
			sysdate,
			0,
			#{cate},
			#{genre}
		)
	</insert>
	<!-- 회원가입 완료 후 회원정보검색 -->
	<select id="joinFinishData" resultType="String">
		select id,rownum 
		from member 
		Where rownum=1 
		order by join_no desc 
	</select>
	<!-- 회원정보 수정하기 -->
	<update id="joinUpdate" parameterType="MemberVO">
		update member set
		pwd=#{pwd},
		post=#{post},
		main_addr=#{main_addr},
		sub_addr=#{sub_addr},
		email=#{email},
		phone=#{phone},
		cate=#{cate},
		genre=#{genre}
		where id=#{id}
	</update>
	<!-- 회원탈퇴 시 리뷰 데이터 변경-->
	<update id="reviewMemIdUpdate"  parameterType="int">
		UPDATE review SET memID = '탈퇴한 회원' 
		WHERE memno = #{memno}
	</update>  
	<!-- 회원 삭제하기 -->
	<delete id="joinDelete" parameterType="String">
		delete from member
		where id=#{id}
	</delete>
	<!-- 회원 추천을 위한 카테고리 및 장르 검색 -->
	<select id="memberGetGenreAndCategory" resultType="MemberVO" parameterType="String">
		SELECT cate,genre FROM member WHERE ID = #{id}
	</select>
</mapper>




